

@inject AccountService AccountService
@inject IDBService DBService
@inject IJSRuntime JSRuntime

<TelerikWindow Visible="@Visible">
    <WindowActions>
        <WindowAction Name="Close"></WindowAction>
    </WindowActions>
    <WindowTitle>
        <span>Add Account</span>
    </WindowTitle>
    <WindowContent>
        <div class="flex-row">
            <div class="flex-col-xs-12">
                <label>Account Name</label>
                <Telerik.Blazor.Components.TelerikTextBox @bind-Value="Account.Name" class="form-control" />
            </div>
        </div>
        <center style="margin-top: 20px;">
            <button class="k-button k-primary" @onclick="SaveAccount" type="button" style="width: 100px;">Save</button>
            <button class="k-button" @onclick="Close" type="button" style="width: 100px;">Cancel</button>
        </center>
    </WindowContent>
</TelerikWindow>

@code {
    private ITEDirectoryAccount Account { get; set; }

    private bool Visible { get; set; }

    [Parameter]
    public Func<Task> OnSave { get; set; }

    public void New()
    {
        this.Account = new TEDirectoryAccount();
        this.Visible = true;
        StateHasChanged();
    }

    public void Edit(ITEDirectoryAccount account)
    {
        this.Account = account;
        this.Visible = true;
        StateHasChanged();
    }

    private void Close()
    {
        this.Visible = false;
        StateHasChanged();
    }

    private async Task SaveAccount()
    {
        try
        {
            // save the account
            using (ITEDirectoryDB dirDB = DirectoryServiceUtil.GetDB(AccountService.ConnectionString))
            {
                await dirDB.SaveAccountAsync(this.Account);
            }

            // hide the window
            this.Visible = false;
            StateHasChanged();

            // call the callback
            if (OnSave != null)
            {
                await OnSave();
            }
        }
        catch (Exception Ex)
        {
            TELogger.Log(0, Ex);
#if DEBUG

#endif
        }
    }
}
