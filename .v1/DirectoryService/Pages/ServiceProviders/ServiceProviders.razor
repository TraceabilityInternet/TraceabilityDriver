@page "/serviceproviders"

@inject AccountService AccountService
@inject IDBService DBService
@inject IJSRuntime JSRuntime

@using System.Text 

<h3>Service Providers</h3>
<div>
	<div style="background-color: black; border-top-right-radius: 5px; border-top-left-radius: 5px; padding: 5px;">
		<button class="k-button" @onclick="(() => EditServiceProvider.New())">Add Service Provider</button>
	</div>
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        PGLN
                    </th>
                    <th style="width: 100px;">

                    </th>
                    <th style="width: 100px;">

                    </th>
                    <th style="width: 100px;">

                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach(var sp in this.serviceProviders)
                {
                <tr>
                    <td>
                        @if (!string.IsNullOrWhiteSpace(sp.Name))
                        {
                            <span>@sp.Name</span>
                        }
                        else
                        {
                            <i style="color: red;">No Name</i>
                        }
                    </td>
                    <td>
                        <span>@sp.PGLN</span>
                    </td>
                    <td>
                        <button class="k-button" @onclick="(() =>  EditServiceProvider.Edit(sp))">Edit</button>
                    </td>
                    <td>
                        <button class="k-button" @onclick="(() => DownloadDID(sp))">Download DID</button>
                    </td>
                    <td>
                        <button class="k-button">Regenerate DID</button>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
	<EditServiceProvider @ref="EditServiceProvider" OnSave="(async () => await Refresh())" />
</div>


@code {
    EditServiceProvider EditServiceProvider { get; set; }

    bool loading = false;
    List<ITEDirectoryServiceProvider> serviceProviders = new List<ITEDirectoryServiceProvider>();

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    private async Task Refresh()
    {
        loading = true;
        serviceProviders = await DBService.GetAll();
        StateHasChanged();
        loading = false;
    }

    private async Task DownloadDID(ITEDirectoryServiceProvider sp)
    {
        string fileName = $"{sp.PGLN}.did";
        string base64 = Convert.ToBase64String(Encoding.UTF8.GetBytes(sp.DID.ToString()));
        await JSRuntime.InvokeVoidAsync("downloadFromByteArray", base64, fileName, "application/text");
    }
}
